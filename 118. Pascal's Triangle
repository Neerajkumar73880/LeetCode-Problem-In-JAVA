Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]
 

Constraints:

1 <= numRows <= 30











****************************************************************************************************************************************************************************************************************











class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> arr = new ArrayList<>();
        if(numRows==0){
            return arr;
        }
        arr.add(new ArrayList<>());
        arr.get(0).add(1);
        for(int i =1;i<numRows;i++){
            List<Integer> prev = arr.get(i-1);
            List<Integer> new_row = new ArrayList<>();
            new_row.add(1);
            for(int j=1;j<prev.size();j++){
                new_row.add(prev.get(j-1) + prev.get(j));
            }

            new_row.add(1);
            arr.add(new_row);
        }
        return arr;
    }
}
