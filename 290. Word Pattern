Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
 

Constraints:

1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space. 















*****************************************************************************************************************************************************
















class Solution {
    public boolean wordPattern(String pattern, String s) {
        Map<Character,String> c_map = new HashMap();
        Map<String,Character> w_map = new HashMap();

        String[] strArray = null;  

        strArray = s.split(" ");  
        if(pattern.length() != strArray.length)return false;
        int i =0;
        for(i=0;i<pattern.length();i++){
            char c = pattern.charAt(i);
            String word = strArray[i];
            if( c_map.containsKey(c) != w_map.containsKey(word)) return false;
            if(c_map.containsKey(c)){
                if((w_map.get(word) != c) || !(c_map.get(c).equals(word)))return false;
            }else{
                c_map.put(c,word);
                w_map.put(word,c);
            }
        }
        return i==pattern.length();
    }
}
