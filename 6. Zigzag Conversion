The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
 

Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:
P     I    N
A   L S  I G
Y A   H R
P     I
Example 3:

Input: s = "A", numRows = 1
Output: "A"
 

Constraints:

1 <= s.length <= 1000
s consists of English letters (lower-case and upper-case), ',' and '.'.
1 <= numRows <= 1000




















*****************************************************************************************************************************************************


















class Solution {
    public String convert(String s, int numRows) {
        if(s == null || s.length() == 0 || numRows == 1) return s;
        StringBuilder[] sbs = new StringBuilder[numRows];
        for(int i = 0; i < numRows; i++)
            sbs[i] = new StringBuilder();
        int len = s.length();
        int count = 0;
        int index = 0;
        boolean down = true;
        while(index < len){
            char c = s.charAt(index++);
            sbs[count].append(c);
            if(down) count++;
            else count--;
            if(count == numRows - 1 || count == 0)
                down = !down;
        }
        for(int i = 1; i < numRows; i++)
            sbs[0].append(sbs[i].toString());
        return sbs[0].toString();
    }
}
